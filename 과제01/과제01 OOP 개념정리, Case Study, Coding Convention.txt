OOP 개념정리, Case Study, Coding Convention

1. OOP 개념정리 ( https://www.slideshare.net/plusjune/ss-46109239 ) 를 읽고 내용을 정리하고 느낀점을 적어 올리시오.
OOP는 캡슐화, 상속성, 다형성을 자원하는 언어입니다.
캡슐화는 데이터와 데이터를 조작하는 방법을 함께 묵는 것 즉, 데이터와 메서드를 하나로 묶고 외부에는  메서드는 내부에서 처리할 수 있도록 합니다.
상속성은 하나의 클래스가 가지고 있는 특징들을 그대로 다른 클래스가 물려받는것 입니다.
다형성은 상속성의 계층을 따라서 같은 이름의 메서드라도 다르게 구현하여 같은 명령에 각자 다른 행동을 하도록 할 수 있습니다.
이해한 내용을 예를 들어 설명한다면 오크라는 클래스를 만든다고 했을때, 체력, 공격력과 같은 데이터와 공격, 달리기, 먹기와 같은 메서드를 함께 묶어(캡슐화)정의 할수 있습니다.
만약 궁수오크와 검사오크를 만들어야 한다면 오크라는 부모클래스를 상속받아 만들 수 있습니다. 그렇게 된다면 오크를 처음부터 만드는 것이 아니라  부모와 다른 부분만 새로 만들면 되기 때문에 확장성이 좋고 시간을 단축시킬 수 있습니다.
다형성을 이용하여 궁수오크의 공격함수는 활을 쏘는 동작으로 검사오크의 공격함수는 검을 휘두르는 동작으로 만들어 같은 공격이라는 명령을 수행하더라도
자신에게 적합한 방식으로 그 함수를 수행할것입니다. 그렇게 한다면 궁수오크인데 활을 휘두르거나 검사오크인데 검을 쏠려고하는 등의 이상한 일은 벌어지지 않을 것 입니다.
또한 보다 직관적이고 효율적인 프로그래밍이 가능하다는 것을 느꼈습니다.


2. 다음 Case 들이 무엇이며 주로 어떨 때 사용하는지 조사하여 답하라. 
2-1. CamelCase (그 중 UpperCamelCase 와 lowerCamelCase 는 어떻게 구별하여 사용하는지 명시하라.)
CamelCase는 "단어"의 첫 글자를 대문자로 표기하고 붙여쓰되, 첫 글자를 제외한 각 단어의 첫 글자는 대문자를 사용하는 표기법입니다.
UpperCamelCase : 첫 단어의 첫 글자도 대문자인 CamelCase 표기법입니다., 클래스 이름 등 대표적으로 타입 이름에 사용합니다.
lowerCamelCase : 첫 단어의 첫 글자는 소문자인 CamelCase 표기법입니다., 메서드, 변수 등 대표적으로 소스 코드에서 일반적인 이름에 사용
예를 들어 FireAttack이라는 단어가 있을때 fire라는 단어와 attack이라는 단어 두개로 이루어져 있으므로
UpperCamelCase 로 한다면 FireAttack이 될것이고, lowerCamelCase로 한다면 fireAttack이 될 것입니다.
글자가 마치 낙타의 등 처럼 생겼다고해서 붙여진 이름입니다.

2-2. snake_case 
단어를 모두 소문자로 쓰고, 단어 사이에 언더바를 사용하여 붙여쓰는 표기법입니다.

2-3. ALL_CAPS_UNDERSCORE
모든 문자를 대문자로 표기하고 단어 사이에 언더바(_)를 사용하여 붙여쓰는 표기법입니다.

=>2번 문제들을 보면 문제에 답이 있습니다. UpperCamelCase은 UpperCamelCase로 lowerCamelCase는 lowerCamelCase로 쓰여있고 snake_case와 ALL_CAPS_UNDERSCORE도 마찬가지네요.
 

3. 첨부한 파일은 (오래 전, 2009년) 한 팀에서 사용하던 코딩컨벤션 문서이다. 문서를 읽어보고 각 항목별로 본인이 사용하던 방식과 어떻게 다는지 기술하라. 혹 문서의 주장과 반대 의견이 있으면 펼져 보아도 좋다.

공통점:
클레스의 멤버들을 작성하는 순서는 동일했습니다.
Wrapping line rule도 동일하였습니다.
저 또한 중괄호를 새로운 라인에 쓰지 않고 if문이나 for문 옆에 붙여서 사용하였습니다. 또한 statement가 아주 단순할 경우에는 생략하는 것으로 해왔습니다.
switch와 case는 같은 시작점을 가지지만 case와 case문 사이에 따로 blankline은 가지지 않았습니다.
이름으로 부터 의미를 알수있도록 하는건 가장 기본이자 가장 중요한 부분이라고 생각합니다.
저 또한 함수의 이름을 동사로 시작하도록 하였습니다.
bool을 얻어오는 함수를 3인칭 현재시제를 사용합니다.
변수 이름은 lowerCamelCase를 따르도록 했습니다.

차이점
2번의 General Rule에서 한 파일에서의 라인수와 한 라인의 글자수를 제한해 본적이 없었던것 같습니다.
저는 클래스 이름과 함수이름 둘다 UpperCamelCase을 사용하였는데 반해 문서에서는 클래스이름만 UpperCamelCase를 사용하고 함수이름은 lowerCamelCase사용하였습니다.
일상에서 자주사용하는 줄임말일 경우 줄임말을 그대로 사용하였는데, 저 같은 경우에 줄임말을 쓸때 setFPS로 쓸지 setFps로 쓸지 명확하게 정하지 않아서 그때그때 달랐던것 같습니다. 앞으로는 한가지로 확실하게 정하고 작업을 해야 할 것 같습니다.
"Abc를 상속하면서 Def 속성을 갖는 것은 DefAbc라 이름짓는다"라는 부분도 생각해 본적 없는 부분인데 좋은 생각인것 같습니다.
함수 인자로 의미를 알 수 있는 경우 함수 이름에 중복해서 쓰지 않으면 함수의 길이를 줄이면서도 가독성을 해치지 않으므로 좋다고 생각합니다.
주석을 어떻게 처리할지까지 정해보지 않은것 같습니다.




