Layout, Widget 조사, XMLJSON 조사
.
1. Android 화면 개발시 사용되는 Layout 들에 대한 특징 및 속성에 대해 조사하라. 아래 2번 항목 외에, 각 Layout 아래에 있는 Widget 들이 가져야 하는 LayoutParams 도 함께 알아보도록 하라.
FrameLayout : 뷰들을 중첩시킬 수 있고, 자식으로 추가된 여러 뷰 위젯들 중 나중에 추가된 것일 수록 앞쪽에 보이도록 하는 Layout이다.
LinearLayout : 자식 View를 수평이나 수직으로 배치할 수 있는 레이아웃. orientation 속성을 통해 방향을 지정할 수 있다.
RelativeLayout : 부모(Parent) View 또는 자식(Child) View의 상대적 위치 관계를 정의하여 UI를 배치하는 Layout이다. 객체간의 상대적인 위치 관계를 정의하지 않으면 왼쪽 위에 배치된다.
자식들은 부모객체들에 상대적인 위치를 layout_alignParent[Top/Bottom/Right/Left/], layout_center[Horizontal/Vertical/InParent]을 이용하여 정해줘야 한다. layout_[above/below/toFightOf/toLeftOf]를 이용해서 반대로 자식 객체들에 상대적인 위치를 줄 수도 있다. 
ConstraintLayout : 제약 조건을 설정하여 배치할수 있는 레이아웃이다. 자식들은 layout_constraint[방향]_to[대상 위젯의 해당 방향으로]of : 대상 id or Parent로 위치를 설정할 수 있다.
.
2. Layout XML 속성 중 다음 항목에 대해 조사하라
layout_width : View의 가로 길이를 지정하는 속성. 값으로 match_parent, wrap_content가 있다.
layout_height : View의 세로 길이를 지정하는 속성. layout_width와 사용 방법이 동일하다.
layout_weight : LinearLayout에서 사용되는 속성으로, 자식 View들의 비율을 지정할 때 사용한다. weightSum 속성을 통해 자식 View들의 weight 총합을 지정한 후, 각 자식 View의 weight 값을 지정한다.
layout_gravity : View의 위치를 지정하는 속성. 부모 View 내에서의 상대적인 위치를 설정한다. Gravity 속성과 유사하지만, LinearLayout 내에서 사용하는 경우 Gravity는 부모 View 내에서의 위치를 설정하고, layout_gravity는 자신이 차지하는 공간 내에서의 위치를 설정한다.
.
3. Android 화면 구성시 사용되는 Widget 들에 대하여 조사하라. 각 항목별로 대표적인 Property(속성), Operation(함수), Event(함수 설정) 에 대해 조사하라. 생긴 모양을 소개하기위해 이미지를 본문에 삽입하라
TextView : 
	텍스트를 표시하는 위젯, 문자열이나 숫자 등 다양한 형태의 텍스트를 표시할 수 있는 위젯
	Property: text, textSize, textColor, gravity, ems, hint 등
	Operation: setText("text"), getMaxEms(), getMaxWidth(), getTextSize() 등
	Event: onClick(), onFocusChanged(), onLongClick() 
ImageView : bitmapd이나 Drawable리소스와 같은 이미지 리소스를 표시하는 위젯
	Property : adjustViewBounds, src,  scaleType, alpha, maxHeight, maxWidth, tint
	Operation : setImageResource(), animateTransform(), clearColorFilter()
	Event : onClick(), onLongClick(), onTouch(), onFocusChange(), onDrag()
EditText : 사용자가 텍스트를 입력할 수 있도록 하는 위젯
	Property : text, hint, textColor, textSize, background
	Operation : setText(), setBackground(), setEnabled()
	Event : onTextChanged(), onEditorAction(), onFocusChange(), onTouch(), onKeyDown()
Button : 사용자가 클릭하면 앱에서 특정 작업을 수행하도록 하는 위젯
	Property : text, textColor, textSize, background, enabled
	Operation : setText(), setBackground(), setEnabled()
	Event : onClick(), onLongClick(), onFocusChange(), onKeyDown()
CheckBox : 안드로이드 앱에서 사용자가 체크할 수 있는 옵션을 제공하는 위젯
	Property : text, textColor, textSize, background, checked
	Operation : setText(), setBackground(), setEnabled()
	Event : onCheckedChanged(), onClick(), onFocusChange()
RadioButton : 안드로이드 앱에서 여러개의 선택 사항 중 하나를 선택할 수 있도록 하는 위젯
	Property : text, textColor, textSize, background, checked
	Operation : setText(), setBackground(), setChecked()
	Event : onCheckedChanged(), onClick(), onFocusChange()
Switch : On/Off 옵션을 제공하는 위젯
	Property : textOn, textOff, textColor, textSize, background, checked
	Operation : setTextOn(), setTextOff(), setBackground(), setChecked()
	Event : onCheckedChanged(), onClick(), onFocusChange()
ToggleButton : On/Off를 전환하는 토글 기능을 제공하는 위젯
	Property : textOn, textOff, textColor, textSize, background, checked
	Operation : setTextOn(), setTextOff(), setBackground(), setChecked()
	Event : onCheckedChanged(), onClick(), onFocusChange()
Spinner :사용자가 선택할 수 있는 목록을 제공하는 위젯
	Property : entries, prompt, background
	Operation : setAdapter(), setBackground(), setSelection()
	Event : onItemSelected(), onNothingSelected()
ListView : 리스트 형식으로 정보를 표시하는 위젯
	Property : adapter, divider, choiceMode
	Operation : setAdapter(), setDivider(), setChoiceMode()
	Event : onItemClick(), onItemLongClick(), onItemSelected(), onNothingSelected()
SeekBar : 값을 선택할 수 있는 슬라이더 형태의 위젯
	Property : max, progress, thumb, background
	Operation : setMax(), setProgress(), setThumb(), setBackground()
	Event : onProgressChanged(), onStartTrackingTouch(), onStopTrackingTouch()
.
4. 안드로이드 layout xml 내에서 사용하는 단위(px, dp, sp 등) 은 어떤 것들이 있는지 간단히 정리하라. 
px : 물리적인 픽셀 단위. 스크린 해상도에 따라 크기가 달라진다.
dp : density-independent pixel로 스크린 밀도에 따라 크기가 자동으로 조절된다. 스크린 크기가 달라져도 뷰의 크기가 일정하게 유지된다.
sp : scale-independent pixel로 스케일 가능한 픽셀 단위. 폰트 크기를 지정할 때 사용한다. 따라소, 사용자가 폰트 크기를 변경하면 해당 뷰의 폰트 크기도 자동으로 변경된다.
mm : 밀리미터 단위
in : 인치 단위 
% : 부모 뷰의 크기에 상대적인 비율로 크기를 지정
wrap_content : 뷰가 포함하는 내용물의 크기에 맞게 자동으로 크기를 조정
match_parent : 부모 뷰의 크기에 맞게 자동으로 크기를 조정
.
.
5. 다음 영상에서 XML, JSON 관련 내용을 정리하라. YAML 은 필수 사항은 아니다.
 https://www.youtube.com/watch?v=55FrHTNjTCc
.
xml과 Json은 정보를 주는 쪽과 받는 쪽사이에 잘 설계되어 합의된 형식 중 하나이다.
xml은 tag라는 형식을 이용해 데이터를 저장한다. xml형식으로 웹을 표현할 수 있는 것이 html이다.
tag는 시작과 종료 tag가 있고 tag명이 각 데이터의 항목명이 되고 그 사이에 데이터가 들어간다. 데이터에는 또 다시 tag가 들어갈 수도 있고 순수 데이터들이 들어갈 수도 있다.
xml의 개행문자와 공백은 보기 좋게하기 위해서 이고 개행문자와 공백을 모두 없애고 한줄로해도 컴퓨터는 해석이 가능하다.
.
Json은 xml에 비해 간결한 형식으로 자바스크립트의 객체 표기법을 기반으로 만들어 졌다.
{}안에 ,를 이용하여 항목과 데이터를 구분해서 정보들을 표현하고 있다. 객체 안에는 단일 데이터나 또 다른 객체 혹은 배열이 들어갈 수 있다. 대신 Json은 xml에 비해서 문법오류에 취약하다.
.
xml은 주석을 달 수 있다는 장정이 있다. 또한 스키마(xsd파일을 통해 정의할 수 있다.)를 통해 요구되는 형태와 구로를 갖췄는지 확인할 수 있다.

